/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2019-09-09 13:46:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.loginEnroll;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>탈무브 | 로그인해주세요</title>\r\n");
      out.write("    <meta name=\"viewport\" content=\"width:device-width, initial-scale=1.0\">\r\n");
      out.write("    \r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/testt/vendors/css/normalize.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/testt/vendors/css/bootstrap-grid.css\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css?family=Lato:100,300,300i,400&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <!--CSS링크 수정하세요-->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/testt/views/loginEnroll/loginPage.css\">\r\n");
      out.write("    <script src=\"https://kit.fontawesome.com/08d0951667.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"wrapper fadeInDown\">\r\n");
      out.write("    \t<div class=\"forms\">\r\n");
      out.write("\t        <div class=\"formContent one\">\r\n");
      out.write("\t            <h1 class=\"logo-text\"><a href=\"/testt/index.jsp\">TALMOVE</a></h1>\r\n");
      out.write("\t        \r\n");
      out.write("\t            <button id=\"api-login\"><img src=\"/testt/resources/img/google_logo.png\" alt=\"\">Google로 로그인</button>\r\n");
      out.write("\t            <p id=\"center-word\">또는</p>\r\n");
      out.write("\t            <form action=\"/testt/login.ed\" method=\"post\" id=\"login-form\">\r\n");
      out.write("\t                <p class=\"placeholder\" id=\"login-email-placeholder\">이메일</p>\r\n");
      out.write("\t                <input type=\"text\" id=\"login-email\" name=\"uemail\" autocomplete=off required>\r\n");
      out.write("\t                <p class=\"guide\" id=\"login-email-focus\">　</p>\r\n");
      out.write("\t\r\n");
      out.write("\t                <p class=\"placeholder\" id=\"login-pwd-placeholder\">비밀번호</p>\r\n");
      out.write("\t                <input type=\"password\" id=\"login-pwd\" name=\"upwd\" required>\r\n");
      out.write("\t                <p class=\"guide\" id=\"login-pwd-focus\">　</p>\r\n");
      out.write("\t\r\n");
      out.write("\t                <button class=\"form-btn login-btn\" type=\"submit\">이메일로 로그인</button>\r\n");
      out.write("\t            </form>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t            <div class=\"formFooter\">\r\n");
      out.write("\t                <a class=\"underlineHover forgetPwd\" href=\"/testt/views/findpwd/findpwd.jsp\">비밀번호를 잊어버렸어요.</a>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t            <div class=\"form-message\">\r\n");
      out.write("               \t\t<p>LOG IN <span>&#187;</span></p>\r\n");
      out.write("            \t</div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t        <div class=\"formContent two\">\r\n");
      out.write("\t        \t<h1 class=\"logo-text\"><a href=\"/testt/index.jsp\">TALMOVE</a></h1>\r\n");
      out.write("\t        \t<form action=\"/testt/enroll.ed\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t<p class=\"placeholder\" id=\"email-placeholder\">이메일</p>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"uemail\" id=\"signup-email\" autocomplete=off required>\r\n");
      out.write("\t\t\t\t\t<p class=\"guide\" id=\"email-focus\">　</p>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<p class=\"placeholder\" id=\"pwd-placeholder\">비밀번호</p>\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" name=\"upwd\" id=\"signup-pwd\" required>\r\n");
      out.write("\t\t\t\t\t<p class=\"guide\" id=\"pwd-focus\">　</p>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<p class=\"placeholder\" id=\"pwdchk-placeholder\">비밀번호 확인</p>\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" id=\"signup-pwdchk\" required>\r\n");
      out.write("\t\t\t\t\t<p class=\"guide\" id=\"pwdchk-focus\">　</p>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<p class=\"placeholder\" id=\"name-placeholder\">이름(실명)</p>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"uname\" id=\"signup-name\" autocomplete=off required>\r\n");
      out.write("\t\t\t\t\t<p class=\"guide\" id=\"name-focus\">　</p>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<button class=\"form-btn enroll-btn\" type=\"submit\">이메일로 회원가입</button>\r\n");
      out.write("         \t\t</form>\r\n");
      out.write("\t          \t<div class=\"formFooter enrollFooter\">\r\n");
      out.write("\t                <p>회원가입 시, <a href=\"#\">탈무브 이용약관</a>, <a href=\"#\">개인정보 취급방침</a> 및 <a href=\"#\">개인정보 3자 제공</a>에 동의하게 됩니다.</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-message\">\r\n");
      out.write("\t                <p>SIGN UP <span>&#187;</span></p>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/testt/vendors/js/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/testt/views/loginEnroll/loginPage.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
